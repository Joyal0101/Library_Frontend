{"ast":null,"code":"var _jsxFileName = \"P:\\\\Final Mern\\\\web-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Set up axios defaults\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n  }, []);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async (name, email, password, role = 'borrower') => {\n    try {\n      setError(null);\n      const response = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password,\n        role\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    setError(null);\n  };\n  const updateProfile = async (name, email) => {\n    try {\n      setError(null);\n      // Note: This would require a backend endpoint for updating user profile\n      // For now, we'll just update the local state\n      setUser(prev => ({\n        ...prev,\n        name,\n        email\n      }));\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      setError(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    clearError,\n    isAuthenticated: !!user,\n    isLibrarian: (user === null || user === void 0 ? void 0 : user.role) === 'librarian',\n    isBorrower: (user === null || user === void 0 ? void 0 : user.role) === 'borrower'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"7+yZn6J2c3ngGSY07PyfRn24fIE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","console","removeItem","login","email","password","post","setItem","success","_error$response","_error$response$data","message","register","name","role","_error$response2","_error$response2$data","logout","updateProfile","prev","_error$response3","_error$response3$data","clearError","value","isAuthenticated","isLibrarian","isBorrower","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["P:/Final Mern/web-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n  }, []);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      setError(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password, role = 'borrower') => {\r\n    try {\r\n      setError(null);\r\n      const response = await axios.post('/api/auth/register', { \r\n        name, \r\n        email, \r\n        password, \r\n        role \r\n      });\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      setError(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  const updateProfile = async (name, email) => {\r\n    try {\r\n      setError(null);\r\n      // Note: This would require a backend endpoint for updating user profile\r\n      // For now, we'll just update the local state\r\n      setUser(prev => ({ ...prev, name, email }));\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      setError(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    clearError,\r\n    isAuthenticated: !!user,\r\n    isLibrarian: user?.role === 'librarian',\r\n    isBorrower: user?.role === 'borrower'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}