{"ast":null,"code":"var _jsxFileName = \"P:\\\\Final Mern\\\\web-frontend\\\\src\\\\components\\\\ApiTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiTest = () => {\n  _s();\n  const [testResult, setTestResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const testBackendConnection = async () => {\n    setLoading(true);\n    setTestResult('Testing...');\n    try {\n      // Test health endpoint\n      const healthResponse = await axios.get('/api/health');\n      setTestResult(`✅ Health check: ${healthResponse.data.message}`);\n\n      // Test registration endpoint\n      const testEmail = `test${Date.now()}@example.com`;\n      const registerResponse = await axios.post('/api/auth/register', {\n        name: 'Test User',\n        email: testEmail,\n        password: '123456'\n      });\n      setTestResult(prev => prev + `\\n✅ Registration test: ${registerResponse.data.message}`);\n\n      // Test login endpoint\n      const loginResponse = await axios.post('/api/auth/login', {\n        email: testEmail,\n        password: '123456'\n      });\n      setTestResult(prev => prev + `\\n✅ Login test: ${loginResponse.data.message}`);\n    } catch (error) {\n      var _error$response;\n      console.error('API Test Error:', error);\n      setTestResult(`❌ Error: ${error.message}\\nResponse: ${JSON.stringify((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data, null, 2)}`);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      border: '1px solid #ccc',\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"API Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testBackendConnection,\n      disabled: loading,\n      style: {\n        padding: '10px',\n        marginBottom: '10px'\n      },\n      children: loading ? 'Testing...' : 'Test Backend Connection'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        backgroundColor: '#f5f5f5',\n        padding: '10px',\n        whiteSpace: 'pre-wrap',\n        fontSize: '12px'\n      },\n      children: testResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ApiTest, \"u7Dkyx5gq3ljEgA7UWq3W0Ms3ak=\");\n_c = ApiTest;\nexport default ApiTest;\nvar _c;\n$RefreshReg$(_c, \"ApiTest\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ApiTest","_s","testResult","setTestResult","loading","setLoading","testBackendConnection","healthResponse","get","data","message","testEmail","Date","now","registerResponse","post","name","email","password","prev","loginResponse","error","_error$response","console","JSON","stringify","response","style","padding","border","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","marginBottom","backgroundColor","whiteSpace","fontSize","_c","$RefreshReg$"],"sources":["P:/Final Mern/web-frontend/src/components/ApiTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ApiTest = () => {\r\n  const [testResult, setTestResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testBackendConnection = async () => {\r\n    setLoading(true);\r\n    setTestResult('Testing...');\r\n    \r\n    try {\r\n      // Test health endpoint\r\n      const healthResponse = await axios.get('/api/health');\r\n      setTestResult(`✅ Health check: ${healthResponse.data.message}`);\r\n      \r\n      // Test registration endpoint\r\n      const testEmail = `test${Date.now()}@example.com`;\r\n      const registerResponse = await axios.post('/api/auth/register', {\r\n        name: 'Test User',\r\n        email: testEmail,\r\n        password: '123456'\r\n      });\r\n      \r\n      setTestResult(prev => prev + `\\n✅ Registration test: ${registerResponse.data.message}`);\r\n      \r\n      // Test login endpoint\r\n      const loginResponse = await axios.post('/api/auth/login', {\r\n        email: testEmail,\r\n        password: '123456'\r\n      });\r\n      \r\n      setTestResult(prev => prev + `\\n✅ Login test: ${loginResponse.data.message}`);\r\n      \r\n    } catch (error) {\r\n      console.error('API Test Error:', error);\r\n      setTestResult(`❌ Error: ${error.message}\\nResponse: ${JSON.stringify(error.response?.data, null, 2)}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', border: '1px solid #ccc', margin: '20px' }}>\r\n      <h3>API Connection Test</h3>\r\n      <button \r\n        onClick={testBackendConnection} \r\n        disabled={loading}\r\n        style={{ padding: '10px', marginBottom: '10px' }}\r\n      >\r\n        {loading ? 'Testing...' : 'Test Backend Connection'}\r\n      </button>\r\n      <pre style={{ \r\n        backgroundColor: '#f5f5f5', \r\n        padding: '10px', \r\n        whiteSpace: 'pre-wrap',\r\n        fontSize: '12px'\r\n      }}>\r\n        {testResult}\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}