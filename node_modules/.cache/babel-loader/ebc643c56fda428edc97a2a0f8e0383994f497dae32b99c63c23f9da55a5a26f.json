{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE='https://library-backend-l70h.onrender.com';const ApiTest=()=>{const[testResult,setTestResult]=useState('');const[loading,setLoading]=useState(false);const testBackendConnection=async()=>{setLoading(true);setTestResult('Testing...');try{// Test health endpoint\nconst healthResponse=await axios.get(\"\".concat(API_BASE,\"/api/health\"));setTestResult(\"\\u2705 Health check: \".concat(healthResponse.data.message));// Test registration endpoint\nconst testEmail=\"test\".concat(Date.now(),\"@example.com\");const registerResponse=await axios.post(\"\".concat(API_BASE,\"/api/auth/register\"),{name:'Test User',email:testEmail,password:'123456'});setTestResult(prev=>prev+\"\\n\\u2705 Registration test: \".concat(registerResponse.data.message||'registered'));// Test login endpoint\nconst loginResponse=await axios.post(\"\".concat(API_BASE,\"/api/auth/login\"),{email:testEmail,password:'123456'});setTestResult(prev=>prev+\"\\n\\u2705 Login test: \".concat(loginResponse.data.message||'logged in'));}catch(error){var _error$response;console.error('API Test Error:',error);const errMsg=error!==null&&error!==void 0&&(_error$response=error.response)!==null&&_error$response!==void 0&&_error$response.data?JSON.stringify(error.response.data,null,2):error.message;setTestResult(\"\\u274C Error: \".concat(error.message,\"\\nResponse: \").concat(errMsg));}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:testBackendConnection,disabled:loading,children:loading?'Running tests...':'Run API Test'}),/*#__PURE__*/_jsx(\"pre\",{style:{whiteSpace:'pre-wrap',marginTop:12},children:testResult})]});};export default ApiTest;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","API_BASE","ApiTest","testResult","setTestResult","loading","setLoading","testBackendConnection","healthResponse","get","concat","data","message","testEmail","Date","now","registerResponse","post","name","email","password","prev","loginResponse","error","_error$response","console","errMsg","response","JSON","stringify","children","onClick","disabled","style","whiteSpace","marginTop"],"sources":["P:/Final Mern/web-frontend/src/components/ApiTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = 'https://library-backend-l70h.onrender.com';\r\n\r\nconst ApiTest = () => {\r\n  const [testResult, setTestResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const testBackendConnection = async () => {\r\n    setLoading(true);\r\n    setTestResult('Testing...');\r\n    \r\n    try {\r\n      // Test health endpoint\r\n      const healthResponse = await axios.get(`${API_BASE}/api/health`);\r\n      setTestResult(`✅ Health check: ${healthResponse.data.message}`);\r\n      \r\n      // Test registration endpoint\r\n      const testEmail = `test${Date.now()}@example.com`;\r\n      const registerResponse = await axios.post(`${API_BASE}/api/auth/register`, {\r\n        name: 'Test User',\r\n        email: testEmail,\r\n        password: '123456'\r\n      });\r\n      \r\n      setTestResult(prev => prev + `\\n✅ Registration test: ${registerResponse.data.message || 'registered'}`);\r\n      \r\n      // Test login endpoint\r\n      const loginResponse = await axios.post(`${API_BASE}/api/auth/login`, {\r\n        email: testEmail,\r\n        password: '123456'\r\n      });\r\n      \r\n      setTestResult(prev => prev + `\\n✅ Login test: ${loginResponse.data.message || 'logged in'}`);\r\n      \r\n    } catch (error) {\r\n      console.error('API Test Error:', error);\r\n      const errMsg = error?.response?.data ? JSON.stringify(error.response.data, null, 2) : error.message;\r\n      setTestResult(`❌ Error: ${error.message}\\nResponse: ${errMsg}`);\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={testBackendConnection} disabled={loading}>\r\n        {loading ? 'Running tests...' : 'Run API Test'}\r\n      </button>\r\n      <pre style={{ whiteSpace: 'pre-wrap', marginTop: 12 }}>{testResult}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiTest;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAG,2CAA2C,CAE5D,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE7C,KAAM,CAAAY,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CACxCD,UAAU,CAAC,IAAI,CAAC,CAChBF,aAAa,CAAC,YAAY,CAAC,CAE3B,GAAI,CACF;AACA,KAAM,CAAAI,cAAc,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,IAAAC,MAAA,CAAIT,QAAQ,eAAa,CAAC,CAChEG,aAAa,yBAAAM,MAAA,CAAoBF,cAAc,CAACG,IAAI,CAACC,OAAO,CAAE,CAAC,CAE/D;AACA,KAAM,CAAAC,SAAS,QAAAH,MAAA,CAAUI,IAAI,CAACC,GAAG,CAAC,CAAC,gBAAc,CACjD,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAApB,KAAK,CAACqB,IAAI,IAAAP,MAAA,CAAIT,QAAQ,uBAAsB,CACzEiB,IAAI,CAAE,WAAW,CACjBC,KAAK,CAAEN,SAAS,CAChBO,QAAQ,CAAE,QACZ,CAAC,CAAC,CAEFhB,aAAa,CAACiB,IAAI,EAAIA,IAAI,gCAAAX,MAAA,CAA6BM,gBAAgB,CAACL,IAAI,CAACC,OAAO,EAAI,YAAY,CAAE,CAAC,CAEvG;AACA,KAAM,CAAAU,aAAa,CAAG,KAAM,CAAA1B,KAAK,CAACqB,IAAI,IAAAP,MAAA,CAAIT,QAAQ,oBAAmB,CACnEkB,KAAK,CAAEN,SAAS,CAChBO,QAAQ,CAAE,QACZ,CAAC,CAAC,CAEFhB,aAAa,CAACiB,IAAI,EAAIA,IAAI,yBAAAX,MAAA,CAAsBY,aAAa,CAACX,IAAI,CAACC,OAAO,EAAI,WAAW,CAAE,CAAC,CAE9F,CAAE,MAAOW,KAAK,CAAE,KAAAC,eAAA,CACdC,OAAO,CAACF,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvC,KAAM,CAAAG,MAAM,CAAGH,KAAK,SAALA,KAAK,YAAAC,eAAA,CAALD,KAAK,CAAEI,QAAQ,UAAAH,eAAA,WAAfA,eAAA,CAAiBb,IAAI,CAAGiB,IAAI,CAACC,SAAS,CAACN,KAAK,CAACI,QAAQ,CAAChB,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAGY,KAAK,CAACX,OAAO,CACnGR,aAAa,kBAAAM,MAAA,CAAaa,KAAK,CAACX,OAAO,iBAAAF,MAAA,CAAegB,MAAM,CAAE,CAAC,CACjE,CAEApB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,mBACEN,KAAA,QAAA8B,QAAA,eACEhC,IAAA,WAAQiC,OAAO,CAAExB,qBAAsB,CAACyB,QAAQ,CAAE3B,OAAQ,CAAAyB,QAAA,CACvDzB,OAAO,CAAG,kBAAkB,CAAG,cAAc,CACxC,CAAC,cACTP,IAAA,QAAKmC,KAAK,CAAE,CAAEC,UAAU,CAAE,UAAU,CAAEC,SAAS,CAAE,EAAG,CAAE,CAAAL,QAAA,CAAE3B,UAAU,CAAM,CAAC,EACtE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}