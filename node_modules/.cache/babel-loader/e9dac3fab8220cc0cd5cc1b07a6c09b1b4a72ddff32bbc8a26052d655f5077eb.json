{"ast":null,"code":"import _objectSpread from\"P:/Final Mern/web-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const BookContext=/*#__PURE__*/createContext();export const useBooks=()=>{const context=useContext(BookContext);if(!context){throw new Error('useBooks must be used within a BookProvider');}return context;};export const BookProvider=_ref=>{let{children}=_ref;const[books,setBooks]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const[totalBooks,setTotalBooks]=useState(0);const fetchBooks=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let search=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';try{setLoading(true);setError(null);const params={page,limit:10};if(search){params.search=search;}const response=await axios.get('/api/books',{params});const{books,totalPages,currentPage,total}=response.data;setBooks(books);setTotalPages(totalPages);setCurrentPage(currentPage);setTotalBooks(total);return{success:true,books};}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch books';setError(message);return{success:false,message};}finally{setLoading(false);}};const fetchBook=async id=>{try{setLoading(true);setError(null);const response=await axios.get(\"/api/books/\".concat(id));return{success:true,book:response.data};}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to fetch book';setError(message);return{success:false,message};}finally{setLoading(false);}};const createBook=async bookData=>{try{setLoading(true);setError(null);const response=await axios.post('/api/books',bookData);const newBook=response.data.book;// Add the new book to the current list\nsetBooks(prev=>[newBook,...prev]);setTotalBooks(prev=>prev+1);return{success:true,book:newBook};}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to create book';setError(message);return{success:false,message};}finally{setLoading(false);}};const updateBook=async(id,bookData)=>{try{setLoading(true);setError(null);const response=await axios.put(\"/api/books/\".concat(id),bookData);const updatedBook=response.data.book;// Update the book in the current list\nsetBooks(prev=>prev.map(book=>book._id===id?updatedBook:book));return{success:true,book:updatedBook};}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to update book';setError(message);return{success:false,message};}finally{setLoading(false);}};const deleteBook=async id=>{try{setLoading(true);setError(null);await axios.delete(\"/api/books/\".concat(id));// Remove the book from the current list\nsetBooks(prev=>prev.filter(book=>book._id!==id));setTotalBooks(prev=>prev-1);return{success:true};}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to delete book';setError(message);return{success:false,message};}finally{setLoading(false);}};const borrowBook=async bookId=>{try{setLoading(true);setError(null);const response=await axios.post('/api/borrow',{bookId});// Update the book's available count\nsetBooks(prev=>prev.map(book=>book._id===bookId?_objectSpread(_objectSpread({},book),{},{available:book.available-1}):book));return{success:true,borrow:response.data.borrow};}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to borrow book';setError(message);return{success:false,message};}finally{setLoading(false);}};const returnBook=async bookId=>{try{setLoading(true);setError(null);const response=await axios.post('/api/borrow/return',{bookId});// Update the book's available count\nsetBooks(prev=>prev.map(book=>book._id===bookId?_objectSpread(_objectSpread({},book),{},{available:book.available+1}):book));return{success:true,borrow:response.data.borrow};}catch(error){var _error$response7,_error$response7$data;const message=((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.message)||'Failed to return book';setError(message);return{success:false,message};}finally{setLoading(false);}};const searchBooks=term=>{setSearchTerm(term);setCurrentPage(1);fetchBooks(1,term);};const clearError=()=>{setError(null);};const value={books,loading,error,searchTerm,currentPage,totalPages,totalBooks,fetchBooks,fetchBook,createBook,updateBook,deleteBook,borrowBook,returnBook,searchBooks,clearError,setCurrentPage};return/*#__PURE__*/_jsx(BookContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsx","_jsx","BookContext","useBooks","context","Error","BookProvider","_ref","children","books","setBooks","loading","setLoading","error","setError","searchTerm","setSearchTerm","currentPage","setCurrentPage","totalPages","setTotalPages","totalBooks","setTotalBooks","fetchBooks","page","arguments","length","undefined","search","params","limit","response","get","total","data","success","_error$response","_error$response$data","message","fetchBook","id","concat","book","_error$response2","_error$response2$data","createBook","bookData","post","newBook","prev","_error$response3","_error$response3$data","updateBook","put","updatedBook","map","_id","_error$response4","_error$response4$data","deleteBook","delete","filter","_error$response5","_error$response5$data","borrowBook","bookId","_objectSpread","available","borrow","_error$response6","_error$response6$data","returnBook","_error$response7","_error$response7$data","searchBooks","term","clearError","value","Provider"],"sources":["P:/Final Mern/web-frontend/src/contexts/BookContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BookContext = createContext();\r\n\r\nexport const useBooks = () => {\r\n  const context = useContext(BookContext);\r\n  if (!context) {\r\n    throw new Error('useBooks must be used within a BookProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const BookProvider = ({ children }) => {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalBooks, setTotalBooks] = useState(0);\r\n\r\n  const fetchBooks = async (page = 1, search = '') => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const params = {\r\n        page,\r\n        limit: 10\r\n      };\r\n      \r\n      if (search) {\r\n        params.search = search;\r\n      }\r\n      \r\n      const response = await axios.get('/api/books', { params });\r\n      const { books, totalPages, currentPage, total } = response.data;\r\n      \r\n      setBooks(books);\r\n      setTotalPages(totalPages);\r\n      setCurrentPage(currentPage);\r\n      setTotalBooks(total);\r\n      \r\n      return { success: true, books };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to fetch books';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchBook = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.get(`/api/books/${id}`);\r\n      return { success: true, book: response.data };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to fetch book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createBook = async (bookData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/books', bookData);\r\n      const newBook = response.data.book;\r\n      \r\n      // Add the new book to the current list\r\n      setBooks(prev => [newBook, ...prev]);\r\n      setTotalBooks(prev => prev + 1);\r\n      \r\n      return { success: true, book: newBook };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to create book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateBook = async (id, bookData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.put(`/api/books/${id}`, bookData);\r\n      const updatedBook = response.data.book;\r\n      \r\n      // Update the book in the current list\r\n      setBooks(prev => prev.map(book => \r\n        book._id === id ? updatedBook : book\r\n      ));\r\n      \r\n      return { success: true, book: updatedBook };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to update book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteBook = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await axios.delete(`/api/books/${id}`);\r\n      \r\n      // Remove the book from the current list\r\n      setBooks(prev => prev.filter(book => book._id !== id));\r\n      setTotalBooks(prev => prev - 1);\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to delete book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const borrowBook = async (bookId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/borrow', { bookId });\r\n      \r\n      // Update the book's available count\r\n      setBooks(prev => prev.map(book => \r\n        book._id === bookId \r\n          ? { ...book, available: book.available - 1 }\r\n          : book\r\n      ));\r\n      \r\n      return { success: true, borrow: response.data.borrow };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to borrow book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const returnBook = async (bookId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await axios.post('/api/borrow/return', { bookId });\r\n      \r\n      // Update the book's available count\r\n      setBooks(prev => prev.map(book => \r\n        book._id === bookId \r\n          ? { ...book, available: book.available + 1 }\r\n          : book\r\n      ));\r\n      \r\n      return { success: true, borrow: response.data.borrow };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to return book';\r\n      setError(message);\r\n      return { success: false, message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchBooks = (term) => {\r\n    setSearchTerm(term);\r\n    setCurrentPage(1);\r\n    fetchBooks(1, term);\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    books,\r\n    loading,\r\n    error,\r\n    searchTerm,\r\n    currentPage,\r\n    totalPages,\r\n    totalBooks,\r\n    fetchBooks,\r\n    fetchBook,\r\n    createBook,\r\n    updateBook,\r\n    deleteBook,\r\n    borrowBook,\r\n    returnBook,\r\n    searchBooks,\r\n    clearError,\r\n    setCurrentPage\r\n  };\r\n\r\n  return (\r\n    <BookContext.Provider value={value}>\r\n      {children}\r\n    </BookContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}